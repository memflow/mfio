[package]
name = "mfio"
version = "0.1.0"
rust-version = "1.72"
edition = "2021"
authors = ["Aurimas Bla≈æulionis <0x60@pm.me>"]
license = "MIT"
repository = "https://github.com/memflow/mfio"
description = "memflow completion-based I/O primitives"

[package.metadata.docs.rs]
features = ["default", "tokio", "async-io"]

[lib]
bench = false

[[bench]]
name = "main"
harness = false

[dependencies]
futures = { version = "0.3", default-features = false }
parking_lot = { version = "0.12", optional = true }
pin-project = "1.0"
tarc = { version = "0.1", default-features = false }
bytemuck = "1"
cglue = { version = "0.2", features = ["task_unstable"], default-features = false }
mfio-derive = { version = "0.1", path = "../mfio-derive" }
http = { version = "0.2", optional = true }
log = "0.4"
rangemap = "1"
# This is only needed when std feature is disabled, but we can't do negative bounds
spin = "0.9"

[target.'cfg(unix)'.dependencies]
nix = { version = "0.26", features = ["poll"] }

[target.'cfg(any(unix, windows))'.dependencies]
async-io = { version = "2", optional = true }

[target.'cfg(all(unix, not(miri)))'.dependencies]
tokio = { version = "1", optional = true, features = ["net"] }

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.48", features = ["Win32_System_Threading", "Win32_Foundation", "Win32_Security"] }

[dev-dependencies]
tokio = { version = "1.24", features = ["rt", "macros", "rt-multi-thread"] }
criterion = { version = "0.5", git = "https://github.com/h33p/criterion.rs", branch = "tput2", features = ["async_tokio", "async_smol", "async_futures"] }
pollster = "0.2"
bytemuck = { version = "1", features = ["derive"] }

[features]
default = ["std", "http"]
std = ["parking_lot"]
